name: CI

on:
  push:
    branches: [ main ]

  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
env:
  APP_TELEGRAM_CHAR_ID: ${{ secrets.APP_TELEGRAM_CHAR_ID }}
  APP_TELEGRAM_BOT_TOKEN: ${{ secrets.APP_TELEGRAM_BOT_TOKEN }}
  APP_BINANCE_API_KEY: ${{ secrets.APP_BINANCE_API_KEY }}
  APP_BINANCE_API_SECRET: ${{ secrets.APP_BINANCE_API_SECRET }}
  APP_LOCALHOST_URL: ${{ secrets.APP_LOCALHOST_URL }}
  APP_DB_URL: ${{ secrets.APP_DB_URL }}
  APP_JWT_SALT: ${{ secrets.APP_JWT_SALT }}
  APP_JWT_TTL: ${{ secrets.APP_JWT_TTL }}
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: TODO tests
        run: echo "TODO tests"
  deploy:
    runs-on: ubuntu-latest
    needs: tests
    
    steps:
      - name: Deploy to Digital Ocean droplet
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          envs: IMAGE_INFOCOIN_APP,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            cd Projects/infocoin
            rm .env
            touch env
            echo APP_TELEGRAM_CHAR_ID=${{ secrets.APP_TELEGRAM_CHAR_ID }} >> .env
            echo APP_TELEGRAM_BOT_TOKEN=${{ secrets.APP_TELEGRAM_BOT_TOKEN }} >> .env
            echo APP_BINANCE_API_KEY=${{ secrets.APP_BINANCE_API_KEY }} >> .env
            echo APP_BINANCE_API_SECRET=${{ secrets.APP_BINANCE_API_SECRET }} >> .env
            echo APP_LOCALHOST_URL=${{ secrets.APP_LOCALHOST_URL }} >> .env
            echo APP_DB_URL=${{ secrets.APP_DB_URL }} >> .env
            echo APP_JWT_SALT=${{ secrets.APP_JWT_SALT }} >> .env
            echo APP_JWT_TTL=${{ secrets.APP_JWT_TTL }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            git pull
            docker compose -f docker-compose.yml -f docker-compose.prod.yml down
            docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d --build